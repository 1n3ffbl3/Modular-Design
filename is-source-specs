


is: Object
	Properties: 4
		VERSION: String
		not: Object (empty)
		any: Object (empty)
		all: Object (empty)

var toString: function, alias to Object.prototype.toString
var slice: function, alias to Array.prototype.slice;
var hasOwnProperty: function, alias to Object.prototype.hasOwnProperty;

not: Function
	Args: 1
		func: a Function
	Returns: ?
	Behavior: helper function which reverses the sense of predicate result

all: Function
	Args: 1
		func: a function
	Returns: boolean
	Behavior: helper function which call predicate function per parameter and return true if all pass.  This magically handles any number of arguments using "arguments"

any: Function
	Args: 1
		func: Function
	Returns: boolean
	Behavior: helper function which call predicate function per parameter and return true if any pass.  This magically handles any number of arguments using "arguments"


// an enormous list of type-check methods attached to "is"






